#!/usr/bin/python
#
# Check_MK Puppet Plugin - Checks the status of the Puppet agent.
#
# Copyright 2010, Stefan Schlesinger <sts@ono.at>
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

from datetime import timedelta, datetime

puppet_agent_default_values = ( 10800, 14400 )

def inventory_puppet_agent(checkname, info):
    if len(info) >= 1:
        for member in info:
            if member[0] == 'agent':
                return [(None, "", None)]
           #component = info[0]
           #if component == "agent":
           #    # found an agent installed on the host, add to inventory
           #    return [ (None, "", None) ]

    return []


def check_puppet_agent(item, params, info):

    #warn, crit = params
    warn = 3600
    crit = 10880

    # we accept min. 2 and max. 3 possible key/value pairs
    if len(info) < 2 or len(info) > 3:
        return (3, "Unknown check_mk agent output: %s" % info )

    for member in info:

        if member[0] == 'agent':
            if member[1] == 'lastrun':
                seconds  = int(member[2])
                delta    = timedelta(seconds=int(seconds))

            if member[1] == 'disabled':
                disabled = member[2]

            if member[1] == 'disabled-reason':
                reason = member[2]

    # TODO: reason with a string results in member[2] not working
    if disabled == 'True':
        return (1, "WARNING - Puppet disabled: %s" % reason)

    if seconds > warn and seconds < crit:
        return (1, "WARNING - Puppet last run %s" % format_timedelta(delta) )

    if seconds > crit:
        return (2, "CRITICAL - Puppet last run %s" % format_timedelta(delta) )

    return (0, "OK - Puppet last run %s" % format_timedelta(delta))

def format_timedelta(td):
    """Format a datetime.timedelta object"""
    days = td.days
    hours = td.seconds // 3600
    minutes = (td.seconds % 3600) // 60
    seconds = td.seconds % 60
    s = '%d seconds ago' % seconds
    if minutes:
        s = '%d minutes and %s' % (minutes, s)
    if hours:
        s = '%d hours, %s' % (hours, s)
    if days:
        s = '%d days, %s' % (days, s)
    return s

check_info['puppet.agent'] = (check_puppet_agent, "puppet.agent", 0, inventory_puppet_agent)
